// PROJECT: Student Record Management System using C++

#include <iostream>
#include <fstream> // Include fstream for file handling
using namespace std;

string id[30], name[30], address[50], dob[30], mobile_no[30], email[30]; // arrays for storing student data.

int total = 0; // to store all data

void enter() {
    int ch = 0;
    cout << "How Many Students' Data Do You Want to Enter?" << endl;
    cin >> ch;

    for (int i = total; i < ch + total; i++) {
        cout << "\nEnter the Data of Student " << i + 1 << endl << endl;
        cout << "** PERSONAL DETAILS **" << endl << endl;

        cout << "Enter Name: " << endl;
        cin >> name[i];

        cout << "Enter Address: " << endl;
        cin >> address[i];

        cout << "Enter Date of Birth: " << endl;
        cin >> dob[i];

        cout << "Enter Id: " << endl;
        cin >> id[i];

        cout << "Enter Mobile NO: " << endl;
        cin >> mobile_no[i];

        cout << "Enter Email: " << endl;
        cin >> email[i];
    }

    total += ch; // Update total count
}

void show() {
    if (total == 0) {
        cout << "No Data is Entered" << endl;
    } else {
        for (int i = 0; i < total; i++) {
            cout << "** RESULT FOR SHOW DATA **" << endl;
            cout << "\nData of Student: " << i + 1 << endl << endl;
            cout << "** PERSONAL DETAILS **" << endl << endl;

            cout << "Full Name: " << name[i] << endl;
            cout << "Address: " << address[i] << endl;
            cout << "Date of Birth: " << dob[i] << endl;
            cout << "Id: " << id[i] << endl;
            cout << "Mobile NO: " << mobile_no[i] << endl;
            cout << "Email Id: " << email[i] << endl;
        }
    }
}

void saveToFile() {
    ofstream outFile("student_data.txt"); // Open file for writing
    if (!outFile) {
        cout << "Error opening file for writing!" << endl;
        return;
    }

    for (int i = 0; i < total; i++) {
        outFile << name[i] << endl;
        outFile << address[i] << endl;
        outFile << dob[i] << endl;
        outFile << id[i] << endl;
        outFile << mobile_no[i] << endl;
        outFile << email[i] << endl;
    }

    outFile.close(); // Close the file
    cout << "Data saved to file successfully!" << endl;
}

void loadFromFile() {
    ifstream inFile("student_data.txt"); // Open file for reading
    if (!inFile) {
        cout << "Error opening file for reading!" << endl;
        return;
    }

    total = 0; // Reset total count
    while (inFile && total < 30) { // Read until end of file or max students
        getline(inFile, name[total]);
        getline(inFile, address[total]);
        getline(inFile, dob[total]);
        getline(inFile, id[total]);
        getline(inFile, mobile_no[total]);
        getline(inFile, email[total]);
        total++;
    }

    inFile.close(); // Close the file
    cout << "Data loaded from file successfully!" << endl;
}

int main() {
    int value, sample;

    cout << "ENTER 1: To Proceed.." << endl;
    cin >> sample;

    while (sample < 2) { // always in Loop
        cout << ">>>>>>>>  STUDENT RECORD MANAGEMENT SYSTEM  <<<<<<<<" << endl;

        cout << "\nPRESS 1: To Enter data" << endl;
        cout << "-------------------------" << endl;
        cout << "PRESS 2: To Show data" << endl;
        cout << "-------------------------" << endl;
        cout << "PRESS 3: To Save data to file" << endl;
        cout << "-------------------------" << endl;
        cout << "PRESS 4: To Load data from file" << endl;
        cout << "-------------------------" << endl;
        cout << "PRESS 5: To Quit" << endl;
        cout << "-------------------------" << endl;

        cin >> value;

        switch (value) {
            case 1:
                enter();
                break;
            case 2:
                show();
                break;
            case 3:
                saveToFile();
                break;
            case 4:
                loadFromFile();
                break;
            case 5:
                exit(0);
                break;
            default:
                cout << "Invalid input" << endl;
                break;
        }
    }
}
